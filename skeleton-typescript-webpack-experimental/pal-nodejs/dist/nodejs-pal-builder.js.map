{"version":3,"sources":["nodejs-pal-builder.ts"],"names":[],"mappings":"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","file":"nodejs-pal-builder.js","sourcesContent":["import { initializePAL } from 'aurelia-pal';\nimport { IPlatform } from './platform';\nimport { IGlobal } from './global';\nimport { IDom } from './dom';\nimport { IFeature } from './feature';\nimport { NodeJsPlatform } from './nodejs-platform';\nimport { NodeJsFeature } from './nodejs-feature';\nimport { NodeJsDom } from './nodejs-dom';\nimport { JSDOM } from 'jsdom';\nimport { polyfillWholeText } from './polyfills/jsdom-whole-text';\nimport { MutationObserver } from './polyfills/mutation-observer';\nimport { MutationNotifier } from './polyfills/mutation-observer';\n\nlet _patchedjsdom = false;\n\nexport function buildPal(): { global: IGlobal, platform: IPlatform, dom: IDom, feature: IFeature, jsdom: JSDOM} {\n  var jsdom = new JSDOM(undefined, {});\n  var global: IGlobal = <IGlobal>jsdom.window;\n\n  if (!_patchedjsdom) {\n    patchNotifyChange(global);\n    polyfillWholeText();\n    _patchedjsdom = true;\n  }\n\n  ensurePerformance(global.window);\n  ensureMutationObserver(global.window);\n\n  var platform = new NodeJsPlatform(global, jsdom);\n  var dom = new NodeJsDom(global);\n  var feature = new NodeJsFeature(global);\n\n  return {\n    global: global,\n    platform: platform,\n    dom: dom,\n    feature: feature\n  };\n}\n\nlet intersectSetter = function (proto, propertyName: string, intersect: Function) {\n  let old = Object.getOwnPropertyDescriptor(proto, propertyName);\n  let oldSet = old.set;\n  let newSet = function set(V) {\n    oldSet.call(this, V);\n    intersect(this);\n  };\n  Object.defineProperty(proto, propertyName, {\n    set: newSet,\n    get: old.get,\n    configurable: old.configurable,\n    enumerable: old.enumerable\n  });\n};\n\nlet intersectMethod = function (proto, methodName: string, intersect: Function) {\n  let orig = proto[methodName];\n  proto[methodName] = function (...args) {\n    var ret = orig.apply(this, args);\n    intersect(this);\n    return ret;\n  };\n};\n\nfunction patchNotifyChange(window: Window) {\n  let notifyInstance = MutationNotifier.getInstance();\n  let notify = function (node: Node) { notifyInstance.notifyChanged(node); };\n\n  let node_proto = (<any>window)._core.Node.prototype;\n\n  intersectMethod(node_proto, \"appendChild\", notify);\n  intersectMethod(node_proto, \"insertBefore\", notify);\n  intersectMethod(node_proto, \"removeChild\", notify);\n  intersectMethod(node_proto, \"replaceChild\", notify);\n  intersectSetter(node_proto, \"nodeValue\", notify);\n  intersectSetter(node_proto, \"textContent\", notify);\n\n  let element_proto = (<any>window)._core.Element.prototype;\n\n  intersectMethod(element_proto, \"setAttribute\", notify);\n  intersectMethod(element_proto, \"removeAttribute\", notify);\n  intersectMethod(element_proto, \"removeAttributeNode\", notify);\n  intersectMethod(element_proto, \"removeAttributeNS\", notify);\n}\n\n\nfunction ensurePerformance(window) {\n  if (window.performance === undefined) {\n    window.performance = {};\n  }\n\n  if (window.performance.now === undefined) {\n    let nowOffset = Date.now();\n\n    //if (performance.timing && performance.timing.navigationStart) {\n    //  nowOffset = performance.timing.navigationStart;\n    //}\n\n    window.performance.now = function now() {\n      return Date.now() - nowOffset;\n    };\n  }\n}\n\nfunction ensureMutationObserver(window) {\n  if (!window.MutationObserver) {\n    window.MutationObserver = MutationObserver;\n  }\n}"],"sourceRoot":"../src/"}